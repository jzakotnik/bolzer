{"version":3,"sources":["SignInSide.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatarList","justifycontent","avatar","avatarText","paddingLeft","paddingRight","form","width","marginTop","submit","SignInSide","props","useState","enteredName","setEnteredName","classes","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onKeyPress","ev","key","preventDefault","TextField","onChange","e","target","value","required","fullWidth","id","label","name","inputProps","maxLength","autoComplete","autoFocus","Button","onClick","addParticipant","List","participants","map","ListItemAvatar","ListItemText","participant","console","log","deleteParticipant","button","startIcon","Divider","Box","mt","API_ENDPOINT","process","App","setParticipants","fetchData","a","axios","result","data","participantID","method","url","useInterval","useEffect","newParticipant","newparticipants","uniqueParticipant","uuidv4","push","insertData","deleteData","filter","obj","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d96ec371.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Impressum \"}\n      <Link color=\"inherit\" href=\"https://bolzer.me/impressum.html\">\n        hier klicken, made by jure\n      </Link>{\" \"}\n    </Typography>\n  );\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#002884\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(background.jpg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    //backgroundRepeat: \"no-repeat\",\n    //backgroundSize: \"cover\",\n    //backgroundPosition: \"center\",\n    //backgroundImage: \"url(background.jpg)\",\n  },\n  avatarList: {\n    margin: 10,\n    justifycontent: \"space-between\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  avatarText: {\n    paddingLeft: \"10px\",\n    paddingRight: \"50px\",\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide(props) {\n  const [enteredName, setEnteredName] = useState(\"\");\n\n  const classes = useStyles();\n  //console.log(\"Propos changed\");\n\n  const onChange = (e) => {\n    setEnteredName(e.target.value);\n    //console.log(enteredName);\n  };\n\n  const onSaveName = () => {\n    props.addParticipant(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const onDeleteName = (id) => {\n    console.log(id);\n    props.deleteParticipant(id);\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <HowToRegIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Ich bin auf dem Bolzer\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onKeyPress={(ev) => {\n              //prevent enter from submitting form\n              //console.log(`Pressed keyCode ${ev.key}`);\n              if (ev.key === \"Enter\") {\n                ev.preventDefault();\n              }\n            }}\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              onChange={onChange}\n              value={enteredName}\n              required\n              fullWidth\n              id=\"participantName\"\n              label=\"Vorname\"\n              name=\"email\"\n              inputProps={{ maxLength: 15 }}\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={onSaveName}\n            >\n              Ich bin da\n            </Button>\n          </form>\n\n          <Avatar className={classes.avatar}>\n            <LocationOnIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Wer ist schon da\n          </Typography>\n          <List>\n            {props.participants.map((value) => {\n              return (\n                <div key={value.id}>\n                  <ListItemAvatar>\n                    <div className={classes.avatarList}>\n                      <Avatar>\n                        <InsertEmoticonIcon />\n                      </Avatar>\n                      <ListItemText\n                        className={classes.avatarText}\n                        primary={value.participant}\n                      />\n                      <Button\n                        onClick={() => onDeleteName(value.id)}\n                        key={value.id}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        startIcon={<DeleteForeverIcon />}\n                      >\n                        Weg\n                      </Button>\n                    </div>\n                  </ListItemAvatar>\n\n                  <Divider />\n                </div>\n              );\n            })}\n          </List>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport useInterval from \"use-interval\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport SignInSide from \"./SignInSide\";\n\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\nfunction App() {\n  //const classes = useStyles();\n  const [participants, setParticipants] = useState([]);\n\n  async function fetchData() {\n    //console.log(API_ENDPOINT);\n    const result = await axios(API_ENDPOINT + \"/participants\");\n    //console.log(\"Got some results from the API Call:\" + API_ENDPOINT);\n    //console.log(result);\n    setParticipants(result.data);\n  }\n\n  async function deleteData(participantID) {\n    console.log(\"Deleting data\");\n    console.log(participantID);\n    const result = await axios({\n      method: \"delete\",\n      url: API_ENDPOINT + \"/participant\",\n      data: { participantID },\n    });\n    console.log(result);\n  }\n\n  async function insertData(participant) {\n    //const result = await axios(\"http://localhost:4000/participants\");\n    const result = await axios({\n      method: \"post\",\n      url: API_ENDPOINT + \"/participant\",\n      data: participant,\n    });\n    console.log(\"Inserted Data...\");\n    //console.log(participant);\n    //console.log(result);\n  }\n\n  useInterval(() => {\n    // Your custom logic here\n    //console.log(\"Getting some data from API\");\n    fetchData();\n  }, 10000);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  function addParticipant(newParticipant) {\n    const newparticipants = [...participants];\n    const uniqueParticipant = { id: uuidv4(), participant: newParticipant };\n    newparticipants.push(uniqueParticipant);\n    console.log(\"Adding data to DB API:\");\n    console.log(uniqueParticipant);\n    insertData(uniqueParticipant);\n    setParticipants(newparticipants);\n\n    console.log(participants);\n  }\n\n  function deleteParticipant(participantID) {\n    //const newparticipants = [...participants];\n    console.log(\"Deleting participant..\");\n    console.log(participantID);\n    deleteData(participantID);\n    const newparticipants = participants.filter(function (obj) {\n      return obj.id !== participantID;\n    });\n    setParticipants(newparticipants);\n  }\n\n  return (\n    <div>\n      <SignInSide\n        participants={participants}\n        addParticipant={addParticipant}\n        deleteParticipant={deleteParticipant}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}